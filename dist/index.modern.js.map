{"version":3,"file":"index.modern.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useEffect,\n  useImperativeHandle,\n  forwardRef\n} from 'react';\n\nconst allowedCharactersValues = ['alpha', 'numeric', 'alphanumeric'] as const;\n\ntype Props = {\n  allowedCharacters?: typeof allowedCharactersValues[number];\n  ariaLabel?: string;\n  length?: number;\n  containerClassName?: string;\n  inputClassName?: string;\n  isPassword?: boolean;\n  onChange: (res: string) => void;\n};\n\ntype InputMode = 'text' | 'numeric';\n\ntype InputType = 'text' | 'number' | 'password';\n\ntype InputProps = {\n  type: InputType;\n  inputMode: InputMode;\n  pattern: string;\n  min?: string;\n  max?: string;\n};\n\nexport type AuthCodeRef = {\n  focus: () => void;\n  clear: () => void;\n};\n\nconst propsMap: { [key: string]: InputProps } = {\n  alpha: {\n    type: 'text',\n    inputMode: 'text',\n    pattern: '[a-zA-Z]{1}'\n  },\n\n  alphanumeric: {\n    type: 'text',\n    inputMode: 'text',\n    pattern: '[a-zA-Z0-9]{1}'\n  },\n\n  numeric: {\n    type: 'number',\n    inputMode: 'numeric',\n    pattern: '[0-9]{1}',\n    min: '0',\n    max: '9'\n  }\n};\n\nconst AuthCode = forwardRef<AuthCodeRef, Props>(\n  (\n    {\n      allowedCharacters = 'alphanumeric',\n      ariaLabel,\n      length = 6,\n      containerClassName,\n      inputClassName,\n      isPassword = false,\n      onChange\n    },\n    ref\n  ) => {\n    if (isNaN(length) || length < 1) {\n      throw new Error('Length should be a number and greater than 0');\n    }\n\n    if (!allowedCharactersValues.some((value) => value === allowedCharacters)) {\n      throw new Error(\n        'Invalid value for allowedCharacters. Use alpha, numeric, or alphanumeric'\n      );\n    }\n\n    const inputsRef = useRef<Array<HTMLInputElement>>([]);\n    const inputProps = propsMap[allowedCharacters];\n\n    useImperativeHandle(ref, () => ({\n      focus: () => {\n        if (inputsRef.current) {\n          inputsRef.current[0].focus();\n        }\n      },\n      clear: () => {\n        if (inputsRef.current) {\n          for (let i = 0; i < inputsRef.current.length; i++) {\n            inputsRef.current[i].value = '';\n          }\n          inputsRef.current[0].focus();\n        }\n      }\n    }));\n\n    useEffect(() => {\n      inputsRef.current[0].focus();\n    }, []);\n\n    const sendResult = () => {\n      const res = inputsRef.current.map((input) => input.value).join('');\n      onChange && onChange(res);\n    };\n\n    const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {\n        target: { value, nextElementSibling }\n      } = e;\n      if (value.length > 1) {\n        e.target.value = value.charAt(0);\n        if (nextElementSibling !== null) {\n          (nextElementSibling as HTMLInputElement).focus();\n        }\n      } else {\n        if (value.match(inputProps.pattern)) {\n          if (nextElementSibling !== null) {\n            (nextElementSibling as HTMLInputElement).focus();\n          }\n        } else {\n          e.target.value = '';\n        }\n      }\n      sendResult();\n    };\n\n    const handleOnKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      const { key } = e;\n      const target = e.target as HTMLInputElement;\n      if (key === 'Backspace') {\n        if (target.value === '' && target.previousElementSibling !== null) {\n          if (target.previousElementSibling !== null) {\n            (target.previousElementSibling as HTMLInputElement).focus();\n            e.preventDefault();\n          }\n        } else {\n          target.value = '';\n        }\n        sendResult();\n      }\n    };\n\n    const handleOnFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n      e.target.select();\n    };\n\n    const handleOnPaste = (e: React.ClipboardEvent<HTMLInputElement>) => {\n      const pastedValue = e.clipboardData.getData('Text');\n\n      let currentInput = 0;\n\n      for (let i = 0; i < pastedValue.length; i++) {\n        const pastedCharacter = pastedValue.charAt(i);\n        const currentValue = inputsRef.current[currentInput].value;\n        if (pastedCharacter.match(inputProps.pattern)) {\n          if (!currentValue) {\n            inputsRef.current[currentInput].value = pastedCharacter;\n            if (inputsRef.current[currentInput].nextElementSibling !== null) {\n              (inputsRef.current[currentInput]\n                .nextElementSibling as HTMLInputElement).focus();\n              currentInput++;\n            }\n          }\n        }\n      }\n      sendResult();\n\n      e.preventDefault();\n    };\n\n    const inputs = [];\n    for (let i = 0; i < length; i++) {\n      inputs.push(\n        <input\n          key={i}\n          onChange={handleOnChange}\n          onKeyDown={handleOnKeyDown}\n          onFocus={handleOnFocus}\n          onPaste={handleOnPaste}\n          {...inputProps}\n          type={isPassword ? 'password' : inputProps.type}\n          ref={(el: HTMLInputElement) => {\n            inputsRef.current[i] = el;\n          }}\n          maxLength={1}\n          className={inputClassName}\n          autoComplete={i === 0 ? 'one-time-code' : 'off'}\n          aria-label={\n            ariaLabel\n              ? `${ariaLabel}. Character ${i + 1}.`\n              : `Character ${i + 1}.`\n          }\n        />\n      );\n    }\n\n    return <div className={containerClassName}>{inputs}</div>;\n  }\n);\n\nexport default AuthCode;\n"],"names":["allowedCharactersValues","propsMap","alpha","type","inputMode","pattern","alphanumeric","numeric","min","max","AuthCode","forwardRef","allowedCharacters","ariaLabel","length","containerClassName","inputClassName","isPassword","onChange","ref","isNaN","Error","some","value","inputsRef","useRef","inputProps","useImperativeHandle","focus","current","clear","i","useEffect","sendResult","res","map","input","join","handleOnChange","e","target","nextElementSibling","charAt","match","handleOnKeyDown","key","previousElementSibling","preventDefault","handleOnFocus","select","handleOnPaste","pastedValue","clipboardData","getData","currentInput","pastedCharacter","currentValue","inputs","push","React","onKeyDown","onFocus","onPaste","el","maxLength","className","autoComplete"],"mappings":"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"}